version: 2.1
jobs:
  build:
    machine: true
    steps:
      - checkout
      - run:
          name: Start container
          command: docker-compose up -d
      - run: 
          name: Run migrations
          command: |
            docker-compose run web python api/run.py db upgrade --directory api/migrations
            docker-compose run web python api/run.py db downgrade --directory api/migrations
            docker-compose run web python api/run.py db upgrade --directory api/migrations
      - run:
          name: Run tests
          command: docker-compose run web nosetests -v

  frontEndTests:
    machine: true
    steps:
      - checkout
      - run:
          name: Front-end install and tests.
          command: |
            docker-compose build test-ci 
            docker-compose run test-ci  
  
  deploy-test:
    machine : true
    steps:
      - checkout
      - run: 
          name: Deploy to test
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | sh
            export PATH=~/.yarn/bin:$PATH
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install v8.11.3 && nvm use v8.11.3 && nvm alias default v8.11.3
            node -v
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            cd webapp
            yarn
            CI=false yarn build-test
            gcloud app deploy
          

  deploy-prod:
    machine : true
    steps:
      - checkout
      - run: 
          name: Deploy to test
          command: |
            curl -o- -L https://yarnpkg.com/install.sh | sh
            export PATH=~/.yarn/bin:$PATH
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm install v8.11.3 && nvm use v8.11.3 && nvm alias default v8.11.3
            node -v
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            cd webapp
            yarn
            CI=false yarn build
            gcloud app deploy

workflows:
  build_and_test:
    jobs:
      - build
      - frontEndTests
      - deploy-test:
          filters:
            branches:
              only: develop
      - deploy-prod:
          filters:
            branches:
              only: master

